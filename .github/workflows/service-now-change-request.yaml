on:
  pull_request:
    types: [opened, reopened]

jobs:
  servicenow-integration:
    runs-on: ubuntu-latest
    env: 
      SNOW_URL: ${{ vars.SNOW_URL }}
      SNOW_USERNAME: ${{ secrets.SNOW_USERNAME }}
      SNOW_PASSWORD: ${{ secrets.SNOW_PASSWORD }}
    steps:        
      - name: ServiceNow DevOps Change Automation   
        uses: ServiceNow/servicenow-devops-change@v4.1.0
        id: create
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Deploy'
          change-request: '{"setCloseCode":"true","autoCloseChange":true,"attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
          deployment-gate: '{"environment":"deploymentgate","jobName":"Deploy"}'
      - name: Update PR with Service Now 
        uses: actions/github-script@v7
        with:
          script: |
            github.pullRequests.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: 'ServiceNow Request: ${{ steps.get-request.outputs.state }}'
            })
